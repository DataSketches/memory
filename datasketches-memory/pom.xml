<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.datasketches</groupId>
    <artifactId>datasketches-memory-root</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>datasketches-memory</artifactId>
  <name>${project.artifactId}</name>

  <properties>
    <maven.source.skip>true</maven.source.skip>
    <maven.install.skip>false</maven.install.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.datasketches</groupId>
      <artifactId>datasketches-memory-java8</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.datasketches</groupId>
      <artifactId>datasketches-memory-java8-tests</artifactId>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- Generates an effective pom for the packaged jars -->
      <plugin>
        <artifactId>maven-help-plugin</artifactId>
        <version>${maven-help-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>effective-pom</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/maven-archiver/pom.xml</output>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- The assembly plugin builds all artifacts for this project from the other modules
           within the project.  These modules are complementary and not standalone.  Therefore,
           they are not installed and downloaded independently by the end user.
           Instead, the maven-assembly plugin builds all jars, and hides the multi-module
           configuration from the end user. -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!--suppress MavenModelInspection -->
        <version>${maven-assembly-plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultEntries>false</addDefaultEntries>
              <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
              <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Build-Jdk>${java.version} (${java.vendor} ${java.vm.version})</Build-Jdk>
              <Build-OS>${os.name} ${os.arch} ${os.version}</Build-OS>
              <Implementation-Vendor>The Apache Software Foundation</Implementation-Vendor>
              <GroupId-ArtifactId>${project.groupId}:${project.artifactId}</GroupId-ArtifactId>
              <!-- these properties are generated by the git-commit-id-plugin during initialize -->
              <!--suppress UnresolvedMavenProperty -->
              <git-branch>${git.branch}</git-branch>
              <!--suppress UnresolvedMavenProperty -->
              <git-commit-id>${git.commit.id.full}</git-commit-id>
              <!--suppress UnresolvedMavenProperty -->
              <git-commit-time>${git.commit.time}</git-commit-time>
              <!--suppress UnresolvedMavenProperty -->
              <git-commit-user-email>${git.commit.user.email}</git-commit-user-email>
              <!--suppress UnresolvedMavenProperty -->
              <git-commit-tag>${git.tags}</git-commit-tag>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>

          <!-- multi-release (MR) jar -->
          <execution>
            <id>assemble-jar</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>true</attach>
              <descriptors>
                <descriptor>src/assembly/assemble-mr-jar.xml</descriptor>
              </descriptors>
              <!-- The class loader requires this to be set in a multi-release JAR's manifest -->
              <archive>
                <manifestEntries>
                  <Multi-Release>true</Multi-Release>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>

          <!-- sources, tests and javadocs jars -->
          <execution>
            <id>assemble-sources-tests-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>true</appendAssemblyId>
              <attach>true</attach>
              <descriptors>
                <!-- tests jar -->
                <descriptor>src/assembly/assemble-test-jar.xml</descriptor>
                <!-- sources.jar -->
                <descriptor>src/assembly/assemble-sources.xml</descriptor>
                <!-- test-sources.jar -->
                <descriptor>src/assembly/assemble-test-sources.xml</descriptor>
                <!-- javadoc jar -->
                <descriptor>src/assembly/assemble-javadoc.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>

</project>
